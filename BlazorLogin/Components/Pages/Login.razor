@page "/"
@attribute [AllowAnonymous]
@using System.ComponentModel.DataAnnotations
@inject SimpleAuthenticationStateProvider AuthProvider
@inject NavigationManager Navigation

<PageTitle>Login</PageTitle>

<h1>Iniciar sesión</h1>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger" role="alert">@ErrorMessage</div>
}

<EditForm Model="credentials" OnValidSubmit="HandleLoginAsync" FormName="loginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label class="form-label" for="username">Usuario</label>
        <InputText id="username" class="form-control" @bind-Value="credentials.Username" autocomplete="username" />
    </div>
    <div class="mb-3">
        <label class="form-label" for="password">Contraseña</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="credentials.Password" autocomplete="current-password" />
    </div>
    <button class="btn btn-primary" type="submit">Ingresar</button>
</EditForm>

@code {
    private readonly LoginModel credentials = new();
    private string? ErrorMessage;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            Navigation.NavigateTo("/home", true);
        }
    }

    private async Task HandleLoginAsync()
    {
        var success = await AuthProvider.LoginAsync(credentials.Username, credentials.Password);
        if (success)
        {
            ErrorMessage = null;
            Navigation.NavigateTo("/home", true);
        }
        else
        {
            ErrorMessage = "Usuario o contraseña inválidos.";
        }
    }

    private sealed class LoginModel
    {
        [Required(ErrorMessage = "El usuario es obligatorio.")]
        public string Username { get; set; } = string.Empty;

        [Required(ErrorMessage = "La contraseña es obligatoria.")]
        public string Password { get; set; } = string.Empty;
    }
}
